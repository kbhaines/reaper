desc:CC2 Velocity Target
slider1:attack_time=2<0,16>Attack Time (beats)
slider2:resolution=50<10,200>Resolution (ms)
slider3:attack_time_cc=19<0,127>Attack Time CC
slider4:dynamic_cc=1<0,127>Dynamic CC
slider5:target_cc=2<0,127>Target CC
slider6:marcato_threshold=30<0,50>Auto Marcato Threshold

@init
//state machine state values
st_init=0;
st_pre_attack=1;
st_attack=2;
st_post_attack=3;

// state machine state
state=st_init;

target_dyn=64;
current_dyn = 0;
notes_on=0;


bank_msb=122;
bank_lsb=1;
chan = 0;

function pc(articulation) (
    midisend(offset, $xB0 + chan, 0, bank_msb);
    midisend(offset, $xB0 + chan, 32, bank_lsb);
    midisend(offset, $xC0 + chan, articulation);
);

@slider
samples_per_cycle = resolution * (srate / 1000);

@block
while (midirecv(offset,msg1,msg2,msg3)) (
  msg1 == $xb0 && msg2 == attack_time_cc ? (
    attack_time = ceil(16*( msg3 / 127));
  )
  : attack_time == 0 ? (
    midisend(offset,msg1,msg2,msg3); // passthrough other events
  )
  : msg1 == $xb0 && msg2 == dynamic_cc ? (
    target_dyn = msg3;
    state == st_post_attack ? midisend(offset, msg1, target_cc, msg3);
  ) 
  : msg1==$x90 && msg3!=0 ? (
    state == st_init ? (
      marcato_threshold && msg3-target_dyn > marcato_threshold ? (
        pc($x11);
        midisend(offset, $xb0, 1, msg3);
      )
      : pc($x10);
      notes_on = 1;
      state=st_attack;
      start_dyn = msg3;
      beats_per_second = tempo / 60.0;
      samples_needed = floor((attack_time / beats_per_second) * srate);
      samples_left = samples_needed;
      sample_block_counter = 0;
      //sample_counter  = samples_per_cycle * (attack_time / (tempo / ts_denom / 60.0));
    )
    : state == st_attack || state == st_post_attack ? (
      notes_on+=1;
      pc($x20);
    );
//    : target_dyn < 20 && msg3 > 100 ? pc($x30)
//    : target_dyn < 20 && msg3 < 100 ? pc($x32)
//    : (
    midisend(offset, msg1, msg2, msg3);
  ) : msg1 == $x80 && state!=st_init ? (
    notes_on-=1;
    notes_on==0 ? state=st_init;
    midisend(offset, msg1, msg2, msg3);
  ) : (
    midisend(offset,msg1,msg2,msg3); // passthrough other events
  );
);
    

@sample
state == st_attack && !samples_left ? (
  state = st_post_attack;
) : state == st_attack && sample_block_counter ? (
  sample_block_counter -= 1;
  samples_left -= 1;
) : state == st_attack ? (
  f = 1-(samples_left/samples_needed);
  new_dynamic = (target_dyn - start_dyn) * f + start_dyn;
  midisend(0, $xb0, target_cc, new_dynamic);
  sample_block_counter = floor( samples_per_cycle * (attack_time / (tempo / 60.0)));
  samples_left -= 1;
);

